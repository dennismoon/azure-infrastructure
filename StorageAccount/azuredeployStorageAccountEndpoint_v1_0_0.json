{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "minLength": 5,
            "maxLength": 40,
            "metadata": {
                "description": "Name of the Storage Account being created.\n\nMaximum length is 15 characters."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type defines the replication approach."
            }
        },
        "accessTier": {
            "type": "string",
            "defaultValue": "Hot",
            "allowedValues": [
                "Hot",
                "Cold",
                "Archive"
            ],
            "metadata": {
                "description": "Access tier of the Storage Account resource (Hot, Cool, and Archive)."
            }
        },
        "bypassExceptions": {
            "type": "string",
            "defaultValue": "AzureServices",
            "metadata": {
                "description": "Name the permitted set of trusted Microsoft services to bypass the network rules (Valid Values: None, AzureServices, Metrics, Logging).\n\nYou may specify more than one bypass exception."
            }
        },
        "vNetRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Resource Group that contains Virtual Network."
            }
        },
        "vNetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Virtual Network."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Subnet."
            }
        },
        "additionalIPs": {
            "type": "string",
            "defaultValue": "",
          "metadata": {
            "description": "A comma delimited string of additional IPs or IP ranges (in CIDR format) to allow through the firewall."
          }
        },
        "defaultAction": {
            "type": "string",
            "defaultValue": "Allow",
            "allowedValues": [
                "Allow",
                "Deny"
            ],
            "metadata": {
                "description": "Specify the default action of allow or deny when no other rules match (Allow or Deny)."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "northcentralus",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "storageAccountName": "[toLower(parameters('storageAccountName'))]",
        "subscriptionID": "[subscription().subscriptionId]",
        "location": "[toLower(replace(if(empty(parameters('location')), resourceGroup().location, parameters('location')), ' ', ''))]",
        "standardIPs": "",
        "allowedIPs": "[if(greater(length(parameters('additionalIPs')), 0), concat(variables('standardIPs'), ', ', parameters('additionalIPs')), variables('standardIPs'))]",
        "emptyArray": [],
        "allowedIPArray": "[if(greater(length(variables('allowedIPs')), 0), split(replace(variables('allowedIPs'),' ' ,''), ','), variables('emptyArray'))]",
        "ipCount": "[length(variables('allowedIPArray'))]",
        "ipCountAdjusted": "[if(greater(variables('ipCount'), 0), variables('ipCount'), 1)]",
        "ipArray": "[if(greater(variables('ipCount'), 0), variables('allowedIPArray'), array('0.0.0.0'))]",
        "vNetDefined": [
            {
                "id": "[concat(resourceId(variables('subscriptionID'), parameters('vNetRGName'), 'Microsoft.Network/virtualNetworks', parameters('vNetName')), '/subnets/', parameters('subnetName'))]",
                "action": "Allow"
            }
        ],
        "virtualNetworkRulesRef": "[if(empty(parameters('vNetRGName')), variables('emptyArray'), if(empty(parameters('vNetName')), variables('emptyArray'), if(empty(parameters('subnetName')), variables('emptyArray'), variables('vNetDefined'))))]",
        "iprules-array-on-object": {
            "copy": [
                {
                    "name": "ipRules",
                    "count": "[variables('ipCountAdjusted')]",
                    "input": {
                        "value": "[variables('ipArray')[copyIndex('iprules')]]",
                        "action": "allow"
                    }
                }
            ]
        },
        "ipRulesArray": "[if(equals(parameters('defaultAction'),'Deny'), variables('iprules-array-on-object').ipRules, variables('emptyArray'))]",
        "networkAclsDefined": {
            "bypass": "[parameters('bypassExceptions')]",
            "virtualNetworkRules": "[variables('virtualNetworkRulesRef')]",
            "ipRules": "[variables('ipRulesArray')]",
            "defaultAction": "[parameters('defaultAction')]"
        },
        "networkAclsObject": "[variables('networkAclsDefined')]",
        "tagTemplateVersion": "[deployment().name]"
    },
    "resources": [
        {
            "apiVersion": "2018-02-01",
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "location": "[variables('location')]",
            "tags": {
                "Template_Version": "[variables('TagTemplateVersion')]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "networkAcls": "[variables('networkAclsObject')]",
                "supportsHttpsTrafficOnly": true,
                "accessTier": "[parameters('accessTier')]",
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        }
    ],
    "outputs": {
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "storageAccountType": {
            "type": "string",
            "value": "[parameters('storageAccountType')]"
        },
        "accessTier": {
            "type": "string",
            "value": "[parameters('accessTier')]"
        },
        "vNetRGName": {
            "type": "string",
            "value": "[parameters('vNetRGName')]"
        },
        "vNetName": {
            "type": "string",
            "value": "[parameters('vNetName')]"
        },
        "subnetName": {
            "type": "string",
            "value": "[parameters('subnetName')]"
        },
        "networkAclsObject": {
            "type": "object",
            "value": "[variables('networkAclsObject')]"
        },
        "location": {
            "type": "string",
            "value": "[variables('location')]"
        }
    }
}